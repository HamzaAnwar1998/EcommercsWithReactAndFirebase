{"version":3,"sources":["images/mobile.svg","Config/Config.js","Global/ProductsContext.js","Global/CartReducer.js","Global/CartContext.js","Components/Navbar.js","Common.js","Components/Products.js","Components/Home.js","Components/Signup.js","Components/Login.js","Components/NotFound.js","Components/Cart.js","Components/AddProducts.js","Components/Cashout.js","Components/AddProductType.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","db","firestore","ProductsContext","storage","createContext","ProductsContextProvider","state","products","productTypes","userProducts","this","collection","onSnapshot","snapshot","docChanges","forEach","change","type","push","userProduct","doc","id","userId","data","UserId","productId","ProductId","setState","prevProducts","ProductID","ProductName","ProductPrice","ProductImg","ProductType","Type","Provider","value","props","children","React","Component","toast","configure","CartReducer","action","product","index","updatedPrice","updatedQty","updatedShoppingCart","shoppingCart","totalPrice","totalQty","find","info","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","className","qty","add","then","catch","err","console","log","message","cart","TotalProductPrice","findIndex","filtered","filter","selectedDoc","where","get","querySnapshot","element","ref","delete","p","up","sp","productID","Number","CartContext","CartContextProvider","useReducer","dispatch","Navbar","user","history","useHistory","useContext","useEffect","length","to","src","style","icon","onClick","signOut","displayNumber","number","replaceValue","toString","replace","Products","useState","category","setCategory","productCopy","setProductCopy","filterByType","map","checkAdd","isAdded","clone","href","data-toggle","data-target","aria-controls","aria-expanded","aria-label","e","color","marginRight","i","key","aria-hidden","alt","c","Home","onAuthStateChanged","flex","Signup","name","setName","email","setEmail","password","setPassword","error","setError","autoComplete","onSubmit","preventDefault","createUserWithEmailAndPassword","cred","uid","set","Name","Email","Password","htmlFor","required","onChange","target","Login","signInWithEmailAndPassword","NotFound","Cart","ic_add","size","ic_remove","iosTrashOutline","marginTop","AddProducts","productName","setProductName","productPrice","setProductPrice","productImg","setProductImg","productType","setProductType","document","getElementById","defaultValue","t","Cashout","cell","setCell","address","setAddress","successMsg","setSuccessMsg","time","Date","getTime","BuyerName","BuyerEmail","BuyerCell","BuyerAddress","BuyerPayment","BuyerQuantity","setTimeout","disabled","placeholder","AddProductType","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"+KAAAA,EAAOC,QAAU,IAA0B,oC,+JC2B3CC,IAASC,cAVc,CACnBC,OAAQ,0CACRC,WAAY,6BACZC,UAAW,aACXC,cAAe,yBACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAKnB,IAAMC,EAAOT,IAASS,OAChBC,EAAKV,IAASW,YC3BPC,GD4BGZ,IAASa,UC5BMC,2BAElBC,EAAb,4MAEIC,MAAQ,CACJC,SAAU,GACVC,aAAc,GACdC,aAAc,IALtB,kEAQyB,IAAD,OACVA,EAAeC,KAAKJ,MAAMG,aAChCT,EAAGW,WAAW,eAAeC,YAAW,SAAAC,GACtBA,EAASC,aACfC,SAAQ,SAAAC,GACQ,UAAhBA,EAAOC,MACPR,EAAaS,KAAK,CACdC,YAAaH,EAAOI,IAAIC,GACxBC,OAAQN,EAAOI,IAAIG,OAAOC,OAC1BC,UAAWT,EAAOI,IAAIG,OAAOG,YAGrC,EAAKC,SAAS,CACVlB,aAAcA,UAK1B,IAAMmB,EAAelB,KAAKJ,MAAMC,SAChCP,EAAGW,WAAW,YAAYC,YAAW,SAAAC,GACnBA,EAASC,aACfC,SAAQ,SAAAC,GACQ,UAAhBA,EAAOC,MACPW,EAAaV,KAAK,CACdW,UAAWb,EAAOI,IAAIC,GACtBS,YAAad,EAAOI,IAAIG,OAAOO,YAC/BC,aAAcf,EAAOI,IAAIG,OAAOQ,aAChCC,WAAYhB,EAAOI,IAAIG,OAAOS,WAC9BC,YAAajB,EAAOI,IAAIG,OAAOU,cAGvC,EAAKN,SAAS,CACVpB,SAAUqB,UAKtB,IAAMpB,EAAeE,KAAKJ,MAAME,aAChCR,EAAGW,WAAW,eAAeC,YAAW,SAAAC,GACtBA,EAASC,aACfC,SAAQ,SAAAC,GACQ,UAAhBA,EAAOC,MACPT,EAAaU,KAAK,CACdgB,KAAMlB,EAAOI,IAAIG,OAAOW,OAGhC,EAAKP,SAAS,CACVnB,aAAcA,YAvDlC,+BA+DQ,OACI,kBAACN,EAAgBiC,SAAjB,CAA0BC,MAAO,CAAE7B,SAAS,YAAKG,KAAKJ,MAAMC,UAAWC,aAAa,YAAKE,KAAKJ,MAAME,cAAeC,aAAa,YAAKC,KAAKJ,MAAMG,gBAC3IC,KAAK2B,MAAMC,cAjE5B,GAA6CC,IAAMC,W,mECDnDC,IAAMC,YAEC,IAAMC,EAAc,SAACrC,EAAOsC,GAAY,IAGvCC,EACAC,EACAC,EACAC,EACAC,EALIC,EAAuC5C,EAAvC4C,aAAcC,EAAyB7C,EAAzB6C,WAAYC,EAAa9C,EAAb8C,SAOlC,OAAQR,EAAO3B,MAEX,IAAK,cAED,OADciC,EAAaG,MAAK,SAAAR,GAAO,OAAIA,EAAQhB,YAAce,EAAOvB,OAEpEoB,IAAMa,KAAK,uCAAwC,CAC/CC,SAAU,YACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,EACVC,UAAW,cAERzD,KAGPuC,EAAUD,EAAOC,SACV,IAAU,EACjBA,EAAO,kBAAwBA,EAAQd,aAAec,EAAQmB,IAC9DhB,EAAaI,EAAW,EACxBL,EAAeI,EAAaN,EAAQd,aACpC/B,EAAGW,WAAW,eAAesD,IAAI,CAC7BvC,UAAWkB,EAAOvB,GAClBG,OAAQoB,EAAOtB,SAChB4C,MAAK,eAAUC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,EAAIG,YACxC,CACHrB,aAAa,CAAEL,GAAH,mBAAeK,IAAeC,WAAYJ,EAAcK,SAAUJ,IAK1F,IAAK,MAQD,OAPAH,EAAUD,EAAO4B,MACTR,MAAQnB,EAAQmB,IACxBnB,EAAQ4B,kBAAoB5B,EAAQmB,IAAMnB,EAAQd,aAClDiB,EAAaI,EAAW,EACxBL,EAAeI,EAAaN,EAAQd,aACpCe,EAAQI,EAAawB,WAAU,SAAAF,GAAI,OAAIA,EAAK3C,YAAce,EAAOvB,MACjE6B,EAAaJ,GAASD,EACf,CACHK,aAAa,YAAKA,GAAeC,WAAYJ,EAAcK,SAAUJ,GAI7E,IAAK,MAED,OADAH,EAAUD,EAAO4B,MACLR,IAAM,GACdnB,EAAQmB,IAAMnB,EAAQmB,IAAM,EAC5BnB,EAAQ4B,kBAAoB5B,EAAQmB,IAAMnB,EAAQd,aAClDgB,EAAeI,EAAaN,EAAQd,aACpCiB,EAAaI,EAAW,EACxBN,EAAQI,EAAawB,WAAU,SAAAF,GAAI,OAAIA,EAAK3C,YAAce,EAAOvB,MACjE6B,EAAaJ,GAASD,EACf,CACHK,aAAa,YAAKA,GAAeC,WAAYJ,EAAcK,SAAUJ,IAIlE1C,EAIf,IAAK,SACD,IAAMqE,EAAWzB,EAAa0B,QAAO,SAAA/B,GAAO,OAAIA,EAAQhB,YAAce,EAAOvB,MAC7EwB,EAAUD,EAAO4B,KACjBxB,EAAaI,EAAWP,EAAQmB,IAChCjB,EAAeI,EAAaN,EAAQmB,IAAMnB,EAAQd,aAClD,IAAI8C,EAAc7E,EAAGW,WAAW,eACfmE,MAAM,YAAa,KAAMlC,EAAOvB,IAChCyD,MAAM,SAAW,KAAMlC,EAAOtB,QAY/C,OAXA+C,QAAQC,IAAIO,GACZA,EAAYE,MAAMb,MAAK,SAACc,GACpBA,EAAcjE,SAAQ,SAAAkE,GAClBA,EAAQC,IAAIC,eAQb,CACHjC,aAAa,YAAKyB,GAAWxB,WAAYJ,EAAcK,SAAUJ,GAIzE,IAAK,QACD,MAAO,CACHE,aAAc,GAAIC,WAAY,EAAGC,SAAU,GAEnD,IAAK,mBAkBD,OAhBAL,EAAe,EAAGC,EAAa,EAAIC,EAAsB,GAEzDL,EAAOrC,SAASQ,SAAQ,SAAAqE,GACNxC,EAAOnC,aAAa4C,MAAK,SAAAgC,GAAE,OAAKA,EAAG5D,YAAc2D,EAAEvD,WAAewD,EAAG/D,SAAWsB,EAAOtB,YAGjF2B,EAAoBI,MAAK,SAAAiC,GAAE,OAAIA,EAAGzD,YAAcuD,EAAEG,eAE9DH,EAAC,IAAU,EACXA,EAAC,kBAAwBA,EAAErD,aAAeqD,EAAEpB,IAC5Cf,EAAoB/B,KAAKkE,GACzBrC,GAAiByC,OAAOJ,EAAErD,cAC1BiB,GAAc,OAIlB,CACJE,aAAa,YAAKD,GAAsBE,WAAYJ,EAAcK,SAAUJ,GAIpF,QACI,OAAO1C,IChINmF,EAAcrF,0BAEdsF,EAAsB,SAACrD,GAAW,IAAD,EAEjBsD,qBAAWhD,EAAa,CAAEO,aAAc,GAAIC,WAAY,EAAGC,SAAU,IAFpD,mBAEnCoB,EAFmC,KAE7BoB,EAF6B,KAK1C,OACI,kBAACH,EAAYtD,SAAb,CAAsBC,MAAK,2BAAOoC,GAAP,IAAaoB,cACnCvD,EAAMC,WCFNuD,EAAS,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,KAAMxE,EAAa,EAAbA,OAErByE,EAAUC,cAFwB,EAGVC,qBAAWR,GAAjCrC,EAHgC,EAGhCA,SAAUwC,EAHsB,EAGtBA,SAHsB,EAILK,qBAAW/F,GAAtCK,EAJgC,EAIhCA,SAAUE,EAJsB,EAItBA,aAElByF,qBAAU,WACNN,EAAS,CAAC3E,KAAM,mBAAoBV,SAAUA,EAAUE,aAAcA,EAAca,OAASA,MAE9F,CAACA,EAAQf,EAAS4F,OAAQ1F,EAAa0F,SAS1C,OACI,yBAAKpC,UAAU,UACX,yBAAKA,UAAU,YACX,kBAAC,IAAD,CAAMqC,GAAG,KAEL,yBAAKC,IAAI,2DAEb,wDAEFP,GAAQ,yBAAK/B,UAAU,aACrB,8BAAM,kBAAC,IAAD,CAAMqC,GAAG,SAASrC,UAAU,WAA5B,YACN,8BAAM,kBAAC,IAAD,CAAMqC,GAAG,QAAQrC,UAAU,WAA3B,WAET+B,GAAQ,yBAAK/B,UAAU,aACpB,8BAAM,kBAAC,IAAD,CAAMqC,GAAG,IAAIrC,UAAU,WAAW+B,IACxC,0BAAMQ,MAAS,CAAC/C,SAAU,aAAa,kBAAC,IAAD,CAAM6C,GAAG,eAAerC,UAAU,WAAU,kBAAC,OAAD,CAAMwC,KAAM/B,UAC/F,0BAAMT,UAAU,kBAAkBX,IAElC,8BAAM,4BAAQnC,KAAK,SAAS8C,UAAU,yBAAyByC,QAxBtD,WACjBzG,EAAK0G,UAAUvC,MAAK,WAChB6B,EAAQ7E,KAAK,eAsBH,cC9CTwF,EAAgB,SAACC,GAAD,IAASC,EAAT,uDAAwB,IAAxB,OAAgCD,EAAOE,WAAWC,QAAQ,wBAAyBF,ICOnGG,EAAW,SAAC,GAAc,IAAbzF,EAAY,EAAZA,OAAY,EAEF0F,mBAAS,OAFP,mBAE3BC,EAF2B,KAEjBC,EAFiB,OAIIF,mBAAS,IAJb,mBAI3BG,EAJ2B,KAIdC,EAJc,OAMenB,qBAAW/F,GAApDK,EAN0B,EAM1BA,SAAUC,EANgB,EAMhBA,aAAcC,EANE,EAMFA,aANE,EAQCwF,qBAAWR,GAAtCG,EAR0B,EAQ1BA,SAAU1C,EARgB,EAQhBA,aAEZmE,EAAe,SAACpG,GAClBiG,EAAYjG,IAuBhB,OApBAiF,qBAAU,WAQN,GAPA3F,EAAS+G,KAAI,SAAAlC,GAET,IAAMmC,EAAY9G,EAAa4C,MAAK,SAAAgC,GAAE,OAAKA,EAAG5D,YAAc2D,EAAEvD,WAAaP,IAAW+D,EAAG/D,UAGzF,OAFa8D,EAAEoC,UAAZD,EAEInC,KAEK,QAAb6B,EACCG,EAAe,YAAI7G,QAEnB,CAEA,IAAMkH,EAAQlH,EAASqE,QAAO,SAAAQ,GAAC,OAAIA,EAAEnD,cAAgBgF,KACrDG,EAAe,YAAIK,OAExB,CAACR,EAAUxG,EAAa0F,OAAQ7E,EAAQ4B,EAAaiD,SAKpD,oCAEI,yBAAKpC,UAAU,wCACX,uBAAGA,UAAU,eAAe2D,KAAK,KAAI,yCACrC,4BAAQ3D,UAAU,iBAAiB9C,KAAK,SAAS0G,cAAY,WAAWC,cAAY,qBAAqBC,gBAAc,oBAAoBC,gBAAc,QAAQC,aAAW,qBACxK,0BAAMhE,UAAU,yBAEpB,yBAAKA,UAAU,2BAA2B1C,GAAG,qBACzC,wBAAI0C,UAAU,cAEO,QAAbkD,EACA,wBAAIlD,UAAU,mBACV,uBAAGA,UAAU,wCAAwC9C,KAAO,SAASuF,QAAW,SAACwB,GAAD,OAAOX,EAAa,QAAQf,MAAS,CAAC2B,MAAO,QAASC,YAAa,SAAnJ,QAGJ,wBAAInE,UAAU,mBACV,uBAAGA,UAAU,sCAAsC9C,KAAO,SAASuF,QAAW,SAACwB,GAAD,OAAOX,EAAa,QAAQf,MAAS,CAAC2B,MAAO,QAASC,YAAa,SAAjJ,QAKP1H,GAAgBA,EAAa2F,OAAS3F,EAAa8G,KAAI,SAACrG,EAAMkH,GAAP,OACpDlB,IAAahG,EAAKiB,KAClB,wBAAI6B,UAAU,kBAAkBqE,IAAOD,GACnC,uBAAGpE,UAAU,wCAAwC9C,KAAO,SAASuF,QAAW,SAACwB,GAAD,OAAOX,EAAapG,EAAKiB,OAAOoE,MAAS,CAAC2B,MAAO,QAASC,YAAa,SAAUjH,EAAKiB,OAG1K,wBAAI6B,UAAU,kBAAkBqE,IAAOD,GACnC,uBAAGpE,UAAU,sCAAsC9C,KAAO,SAASuF,QAAW,SAACwB,GAAD,OAAOX,EAAapG,EAAKiB,OAAOoE,MAAS,CAAC2B,MAAO,QAASC,YAAa,SAAUjH,EAAKiB,UAG1K,KAEF,wBAAI6B,UAAU,mBACV,kBAAC,IAAD,CAAMA,UAAU,4CAA6CqC,GAAK,mBAAmBE,MAAS,CAAC2B,MAAO,QAASC,YAAa,SAAS,uBAAGnE,UAAU,oBAAoBsE,cAAY,cAMlM,yBAAKtE,UAAU,sBACU,IAApBxD,EAAS4F,QAAgB,uEACzBgB,GAAeA,EAAYhB,OAASgB,EAAYG,KAAI,SAAAzE,GAAO,OACxD,yBAAKkB,UAAU,eAAeqE,IAAKvF,EAAQhB,WACvC,yBAAKkC,UAAU,eACX,yBAAKsC,IAAKxD,EAAQb,WAAYsG,IAAI,eAEtC,yBAAKvE,UAAU,gBACVlB,EAAQf,aAEb,yBAAKiC,UAAU,iBACV2C,EAAc7D,EAAQd,cAD3B,aAGCmB,EAAaG,MAAK,SAAAkF,GAAC,OAAIA,EAAE1G,YAAcgB,EAAQhB,cAAcgB,EAAQ2E,QAClE,4BAASvG,KAAO,SAAS8C,UAAU,iCAAiCyC,QAAS,kBAAMZ,EAAS,CAAE3E,KAAM,cAAeI,GAAIwB,EAAQhB,UAAWgB,UAASvB,OAAQA,MAA3J,eAEA,4BAASL,KAAO,SAAS8C,UAAU,uCAAuCyC,QAAS,kBAAMZ,EAAS,CAAE3E,KAAM,cAAeI,GAAIwB,EAAQhB,UAAWgB,UAASvB,OAAQA,MAAjK,mBAMZ,yBAAKyC,UAAY,iBAAjB,kBACoBkD,IAGxB,yBAAKlD,UAAU,mBACX,kBAAC,IAAD,CAAMA,UAAU,oCAAqCqC,GAAK,eAAeE,MAAS,CAAC2B,MAAO,QAASC,YAAa,SAAS,uBAAGnE,UAAU,aAAasE,cAAY,aCvGlKG,EAAO,SAAC,GAAsB,IAApB1C,EAAmB,EAAnBA,KAAMxE,EAAa,EAAbA,OAEnByE,EAAUC,cAWhB,OATAE,qBAAU,WAENnG,EAAK0I,oBAAmB,SAAA3C,GACfA,GACDC,EAAQ7E,KAAK,gBAMrB,yBAAK6C,UAAU,yBACX,yBAAKA,UAAU,YAAYuC,MAAS,CAACoC,KAAO,IACxC,kBAAC,EAAD,CAAQ5C,KAAMA,EAAMxE,OAAUA,KAElC,yBAAKyC,UAAU,YAAYuC,MAAS,CAACoC,KAAO,IACxC,kBAAC,EAAD,CAAUpH,OAAUA,OClBvBqH,EAAS,SAACtG,GAGnB,IAAM0D,EAAUC,cAHa,EAILgB,mBAAS,IAJJ,mBAItB4B,EAJsB,KAIhBC,EAJgB,OAKH7B,mBAAS,IALN,mBAKtB8B,EALsB,KAKfC,EALe,OAMG/B,mBAAS,IANZ,mBAMtBgC,EANsB,KAMZC,EANY,OAOHjC,mBAAS,IAPN,mBAOtBkC,EAPsB,KAOfC,EAPe,KA2B7B,OACI,yBAAKpF,UAAY,kBACb,yBAAKA,UAAU,SAASuC,MAAS,CAACoC,KAAM,IACpC,kBAAC,EAAD,CAAQ5C,KAAQzD,EAAMyD,QAE1B,yBAAK/B,UAAU,YAAauC,MAAS,CAACoC,KAAM,IACxC,6BACA,uCACA,6BACA,0BAAMU,aAAa,MAAMrF,UAAU,aAAasF,SA1B7C,SAACrB,GACZA,EAAEsB,iBACFvJ,EAAKwJ,+BAA+BT,EAAOE,GAAU9E,MAAK,SAACsF,GACvDxJ,EAAGW,WAAW,qBAAqBS,IAAIoI,EAAK1D,KAAK2D,KAAKC,IAAI,CACtDC,KAAMf,EACNgB,MAAOd,EACPe,SAAUb,IACX9E,MAAK,WACJ2E,EAAQ,IACRE,EAAS,IACTE,EAAY,IACZE,EAAS,IACTpD,EAAQ7E,KAAK,aACdiD,OAAM,SAAAC,GAAG,OAAI+E,EAAS/E,EAAIG,eAC9BJ,OAAM,SAAAC,GAAG,OAAI+E,EAAS/E,EAAIG,cAajB,2BAAOuF,QAAQ,QAAf,QACA,2BAAO7I,KAAK,OAAO8C,UAAU,eAAegG,UAAQ,EAChDC,SAAU,SAAChC,GAAD,OAAOa,EAAQb,EAAEiC,OAAO7H,QAAQA,MAAOwG,IACrD,6BACA,2BAAOkB,QAAQ,SAAf,SACA,2BAAO7I,KAAK,QAAQ8C,UAAU,eAAegG,UAAQ,EACjDC,SAAU,SAAChC,GAAD,OAAOe,EAASf,EAAEiC,OAAO7H,QAAQA,MAAO0G,IACtD,6BACA,2BAAOgB,QAAQ,YAAf,YACA,2BAAO7I,KAAK,WAAW8C,UAAU,eAAegG,UAAQ,EACpDC,SAAU,SAAChC,GAAD,OAAOiB,EAAYjB,EAAEiC,OAAO7H,QAAQA,MAAO4G,IACzD,6BACA,4BAAQ/H,KAAK,SAAS8C,UAAU,gCAAhC,WAEHmF,GAAS,0BAAMnF,UAAU,aAAamF,GACvC,6BACA,+DACI,kBAAC,IAAD,CAAM9C,GAAG,SAAT,aCtDP8D,EAAQ,SAAC7H,GAClB,IAAM0D,EAAUC,cADY,EAEFgB,mBAAS,IAFP,mBAErB8B,EAFqB,KAEdC,EAFc,OAGI/B,mBAAS,IAHb,mBAGrBgC,EAHqB,KAGXC,EAHW,OAIFjC,mBAAS,IAJP,mBAIrBkC,EAJqB,KAIdC,EAJc,KAe5B,OACI,yBAAKpF,UAAY,iBACb,yBAAKA,UAAU,QAAQuC,MAAS,CAACoC,KAAO,IACpC,kBAAC,EAAD,CAAQ5C,KAAQzD,EAAMyD,QAE1B,yBAAK/B,UAAU,YAAYuC,MAAQ,CAACoC,KAAO,IACvC,6BACA,qCACA,6BACA,0BAAMU,aAAa,MAAMrF,UAAU,aAAasF,SAnB9C,SAACrB,GACXA,EAAEsB,iBACFvJ,EAAKoK,2BAA2BrB,EAAOE,GAAU9E,MAAK,WAClD6E,EAAS,IACTE,EAAY,IACZE,EAAS,IACTpD,EAAQ7E,KAAK,QACdiD,OAAM,SAAAC,GAAG,OAAI+E,EAAS/E,EAAIG,cAajB,2BAAOuF,QAAQ,SAAf,SACA,2BAAO7I,KAAK,QAAQ8C,UAAU,eAAegG,UAAQ,EACjDC,SAAU,SAAChC,GAAD,OAAOe,EAASf,EAAEiC,OAAO7H,QAAQA,MAAO0G,IACtD,6BACA,2BAAOgB,QAAQ,YAAf,YACA,2BAAO7I,KAAK,WAAW8C,UAAU,eAAegG,UAAQ,EACpDC,SAAU,SAAChC,GAAD,OAAOiB,EAAYjB,EAAEiC,OAAO7H,QAAQA,MAAO4G,IACzD,6BACA,4BAAQ/H,KAAK,SAAS8C,UAAU,gCAAhC,UAEHmF,GAAS,0BAAMnF,UAAU,aAAamF,GACvC,6BACA,gEACI,kBAAC,IAAD,CAAM9C,GAAG,UAAT,aC3CPgE,EAAW,WACpB,OACI,0C,wBCSKC,EAAO,SAAC,GAAsB,IAApBvE,EAAmB,EAAnBA,KAAMxE,EAAa,EAAbA,OAAa,EAEmB2E,qBAAWR,GAA5DvC,EAF8B,EAE9BA,aAAc0C,EAFgB,EAEhBA,SAAUzC,EAFM,EAENA,WAAYC,EAFN,EAEMA,SAFN,EAGH6C,qBAAW/F,GAAtCK,EAH8B,EAG9BA,SAAUE,EAHoB,EAGpBA,aAEZsF,EAAUC,cAWhB,OATAE,qBAAU,WACNnG,EAAK0I,oBAAmB,SAAA3C,GACfA,GACDC,EAAQ7E,KAAK,aAGrB0E,EAAS,CAAC3E,KAAM,mBAAoBV,SAAUA,EAAUE,aAAcA,EAAca,OAASA,MAC9F,CAACf,EAAS4F,OAAQ1F,EAAa0F,OAAQ7E,IAGtC,oCACI,kBAAC,EAAD,CAAQwE,KAAMA,IACd,oCAC6B,IAAxB5C,EAAaiD,QAAgB,oCAC9B,yBAAKpC,UAAU,kBAEiB,IAAxBb,EAAaiD,QAAgB,oCACzB,mIACA,6BAAK,kBAAC,IAAD,CAAMC,GAAG,KAAT,yBAGZlD,GAAgBA,EAAaiD,OAAS,EAAKjD,EAAaoE,KAAI,SAAA9C,GAAI,OAC7D,yBAAKT,UAAU,YAAYqE,IAAK5D,EAAK3C,WAEjC,yBAAKkC,UAAU,YACX,yBAAKsC,IAAK7B,EAAKxC,WAAYsG,IAAI,eAGnC,yBAAKvE,UAAU,aAAaS,EAAK1C,aAEjC,yBAAKiC,UAAU,sBAAsB2C,EAAclC,EAAKzC,cAAxD,aAEA,yBAAKgC,UAAU,MAAMyC,QAAS,kBAAMZ,EAAS,CAAE3E,KAAM,MAAOI,GAAImD,EAAK3C,UAAW2C,WAC5E,kBAAC,OAAD,CAAM+B,KAAM+D,SAAQC,KAAM,MAG9B,yBAAKxG,UAAU,YAAYS,EAAKR,KAEhC,yBAAKD,UAAU,MAAMyC,QAAS,kBAAMZ,EAAS,CAAE3E,KAAM,MAAOI,GAAImD,EAAK3C,UAAW2C,WAC5E,kBAAC,OAAD,CAAM+B,KAAMiE,YAAWD,KAAM,MAGjC,yBAAKxG,UAAU,cACV2C,EAAclC,EAAKC,mBADxB,aAIA,4BAAQV,UAAU,aAAayC,QAAS,kBAAMZ,EAAS,CAAE3E,KAAM,SAAUI,GAAImD,EAAK3C,UAAW2C,OAAMlD,OAAQA,MACvG,kBAAC,OAAD,CAAMiF,KAAMkE,kBAAiBF,KAAM,UAG1C,KAEJrH,EAAaiD,OAAS,GAAK,yBAAKpC,UAAU,gBACvC,yBAAKA,UAAU,wBAAf,gBAGA,yBAAKA,UAAU,sBACX,6CACA,8BAAOZ,IAEX,yBAAKY,UAAU,sBACX,2CACA,8BAAOX,IAEX,kBAAC,IAAD,CAAMgD,GAAG,UAAUrC,UAAU,gBACzB,4BAAQA,UAAU,iCAAiCuC,MAAO,CAAEoE,UAAW,QAAvE,0BC7EfC,EAAc,SAAC,GAAoB,IAAnB7E,EAAkB,EAAlBA,KAAkB,KAAZxE,OACO0F,mBAAS,KADJ,mBACpC4D,EADoC,KACvBC,EADuB,OAEH7D,mBAAS,GAFN,mBAEpC8D,EAFoC,KAEtBC,EAFsB,OAGP/D,mBAAS,IAHF,mBAGpCgE,EAHoC,KAGxBC,EAHwB,OAILjE,mBAAS,UAJJ,mBAIpCkE,EAJoC,KAIvBC,EAJuB,OAKjBnE,mBAAS,IALQ,mBAKpCkC,EALoC,KAK7BC,EAL6B,KAMrCpD,EAAUC,cACRxF,EAAiByF,qBAAW/F,GAA5BM,aACR0F,qBAAU,WAENnG,EAAK0I,oBAAmB,SAAA3C,GACfA,GACDC,EAAQ7E,KAAK,gBAyDzB,OACI,oCAEI,yBAAK6C,UAAU,WACX,kBAAC,EAAD,CAAQ+B,KAAMA,IACd,yBAAK/B,UAAU,mCACX,6BACA,4CACA,6BACA,0BAAMqF,aAAa,MAAMrF,UAAU,aAAasF,SA/C7C,SAACrB,GAChBA,EAAEsB,iBAsBFtJ,EAAGW,WAAW,YAAYsD,IAAI,CAC1BnC,YAAa8I,EACb7I,aAAcyD,OAAOsF,GACrB9I,WAAYgJ,EACZ/I,YAAaiJ,IACdhH,MAAK,WACJ2G,EAAe,IACfE,EAAgB,GAChBE,EAAc,IACd9B,EAAS,IACTiC,SAASC,eAAe,QAAQjJ,MAAQ,MACzC+B,OAAM,SAAAC,GAAG,OAAI+E,EAAS/E,EAAIG,YAC7BwB,EAAQ7E,KAAK,OAaG,2BAAO4I,QAAQ,gBAAf,gBACA,2BAAO7I,KAAK,OAAO8C,UAAU,eAAegG,UAAQ,EAChDC,SAAU,SAAChC,GAAD,OAAO6C,EAAe7C,EAAEiC,OAAO7H,QAAQA,MAAOwI,IAC5D,6BACA,2BAAOd,QAAQ,iBAAf,iBACA,2BAAO7I,KAAK,SAAS8C,UAAU,eAAegG,UAAQ,EAClDC,SAAU,SAAChC,GAAD,OAAO+C,EAAgB/C,EAAEiC,OAAO7H,QAAQA,MAAO0I,IAC7D,6BACA,2BAAOhB,QAAQ,eAAf,iBACA,2BAAO7I,KAAK,OAAO8C,UAAU,eAAe1C,GAAG,OAAO0I,UAAQ,EAC1DC,SAAU,SAAChC,GAAD,OAAOiD,EAAcjD,EAAEiC,OAAO7H,QAAQA,MAAS4I,IAC7D,6BACA,2BAAOlB,QAAQ,gBAAf,gBACA,4BAAQE,SAAY,SAAChC,GAAOmD,EAAenD,EAAEiC,OAAO7H,QAASkJ,aAAe,SAASvH,UAAU,2BAA2BgE,aAAW,eAAegC,UAAQ,GACvJvJ,GAAgBA,EAAa2F,OAAS3F,EAAa8G,KAAI,SAACiE,EAAEpD,GACvD,OAAO,4BAAQC,IAAOD,EAAG/F,MAAOmJ,EAAErJ,MAAOqJ,EAAErJ,SAC1C,MAET,6BACA,4BAAQjB,KAAK,SAAS8C,UAAU,gCAAhC,SAEHmF,GAAS,0BAAMnF,UAAU,aAAamF,OCtG9CsC,EAAU,SAACnJ,GAEpB,IAAM0D,EAAUC,cAFc,EAIaC,qBAAWR,GAA9CtC,EAJsB,EAItBA,WAAYC,EAJU,EAIVA,SAAUwC,EAJA,EAIAA,SAJA,EAONoB,mBAAS,IAPH,mBAOvB4B,EAPuB,KAOjBC,EAPiB,OAQJ7B,mBAAS,IARL,mBAQvB8B,EARuB,KAQhBC,EARgB,OASN/B,mBAAS,IATH,mBASvByE,EATuB,KASjBC,EATiB,OAUA1E,mBAAS,IAVT,mBAUvB2E,EAVuB,KAUdC,EAVc,OAWJ5E,mBAAS,IAXL,mBAWvBkC,EAXuB,KAWhBC,EAXgB,OAYMnC,mBAAS,IAZf,mBAYvB6E,EAZuB,KAYXC,EAZW,KAc9B5F,qBAAU,WACNnG,EAAK0I,oBAAmB,SAAA3C,GAChBA,EACA9F,EAAGW,WAAW,qBAAqBS,IAAI0E,EAAK2D,KAAK7I,YAAW,SAAAC,GACxDgI,EAAQhI,EAASU,OAAOoI,MACxBZ,EAASlI,EAASU,OAAOqI,UAI7B7D,EAAQ7E,KAAK,gBA+BzB,OACI,oCACI,kBAAC,EAAD,CAAQ4E,KAAMzD,EAAMyD,OACpB,yBAAK/B,UAAU,aACX,6BACA,+CACA,6BACC8H,GAAc,yBAAK9H,UAAU,eAAe8H,GAC7C,0BAAMzC,aAAa,MAAMrF,UAAU,aAAasF,SAlCtC,SAACrB,GACnBA,EAAEsB,iBACFvJ,EAAK0I,oBAAmB,SAAA3C,GACpB,GAAIA,EAAM,CACN,IACMiG,GADO,IAAIC,MACCC,UAClBjM,EAAGW,WAAW,cAAgBmF,EAAK2D,KAAKrI,IAAI,IAAM2K,GAAMrC,IAAI,CACxDwC,UAAWtD,EACXuD,WAAYrD,EACZsD,UAAWX,EACXY,aAAcV,EACdW,aAAcnJ,EACdoJ,cAAenJ,IAChBc,MAAK,WACJwH,EAAQ,IACRE,EAAW,IACXhG,EAAS,CAAE3E,KAAM,UACjB6K,EAAc,wHACdU,YAAW,WACPzG,EAAQ7E,KAAK,OACd,QACJiD,OAAM,SAAAC,GAAG,OAAI+E,EAAS/E,EAAIG,kBAczB,2BAAOuF,QAAQ,QAAf,QACA,2BAAO7I,KAAK,OAAO8C,UAAU,eAAegG,UAAQ,EAChD3H,MAAOwG,EAAM6D,UAAQ,IACzB,6BACA,2BAAO3C,QAAQ,SAAf,SACA,2BAAO7I,KAAK,QAAQ8C,UAAU,eAAegG,UAAQ,EACjD3H,MAAO0G,EAAO2D,UAAQ,IAC1B,6BACA,2BAAO3C,QAAQ,WAAf,WACA,2BAAO7I,KAAK,SAAS8C,UAAU,eAAegG,UAAQ,EAClDC,SAAU,SAAChC,GAAD,OAAO0D,EAAQ1D,EAAEiC,OAAO7H,QAAQA,MAAOqJ,EAAMiB,YAAY,mBACvE,6BACA,2BAAO5C,QAAQ,oBAAf,oBACA,2BAAO7I,KAAK,OAAO8C,UAAU,eAAegG,UAAQ,EAChDC,SAAU,SAAChC,GAAD,OAAO4D,EAAW5D,EAAEiC,OAAO7H,QAAQA,MAAOuJ,IACxD,6BACA,2BAAO7B,QAAQ,gBAAf,gBACA,2BAAO7I,KAAK,SAAS8C,UAAU,eAAegG,UAAQ,EAClD3H,MAAOe,EAAYsJ,UAAQ,IAC/B,6BACA,2BAAO3C,QAAQ,wBAAf,wBACA,2BAAO7I,KAAK,SAAS8C,UAAU,eAAegG,UAAQ,EAClD3H,MAAOgB,EAAUqJ,UAAQ,IAC7B,6BACA,4BAAQxL,KAAK,SAAS8C,UAAU,gCAAhC,WAEHmF,GAAS,0BAAMnF,UAAU,aAAamF,MCzFvDzG,IAAMC,YAIC,IAAMiK,EAAiB,SAAC,GAAY,IAAX7G,EAAU,EAAVA,KAAU,EAEAkB,mBAAS,IAFT,mBAE/BkE,EAF+B,KAElBC,EAFkB,OAGZnE,mBAAS,IAHG,mBAG/BkC,EAH+B,KAGxBC,EAHwB,KAIhCpD,EAAUC,cACRxF,EAAiByF,qBAAW/F,GAA5BM,aACR0F,qBAAU,WAENnG,EAAK0I,oBAAmB,SAAA3C,GACfA,GACDC,EAAQ7E,KAAK,gBAiCzB,OACI,oCACI,yBAAK6C,UAAU,WACX,kBAAC,EAAD,CAAQ+B,KAAMA,IACd,yBAAK/B,UAAU,mCACX,6BACA,gDACA,6BACA,0BAAMqF,aAAa,MAAMrF,UAAU,aAAasF,SApCzC,SAACrB,GAGpB,OAFAA,EAAEsB,iBACY9I,EAAa6C,MAAK,SAAAkI,GAAC,OAAIA,EAAErJ,OAASgJ,UAE5CzI,IAAMyG,MAAM,uCAAwC,CAChD3F,SAAU,YACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,KAKd9D,EAAGW,WAAW,eAAesD,IAAI,CAC7B/B,KAAMgJ,IACPhH,MAAK,WACJiH,EAAe,IACfhC,EAAS,OACVhF,OAAM,SAAAC,GAAG,OAAI+E,EAAS/E,EAAIG,iBAC7BwB,EAAQ7E,KAAK,QAeD,2BAAO4I,QAAQ,gBAAf,gBACA,2BAAO7I,KAAK,OAAO8C,UAAU,eAAegG,UAAQ,EAChDC,SAAU,SAAChC,GAAD,OAAOmD,EAAenD,EAAEiC,OAAO7H,QAAQA,MAAO8I,IAC5D,6BACA,4BAAQjK,KAAK,SAAS8C,UAAU,gCAAhC,SAEHmF,GAAS,0BAAMnF,UAAU,aAAamF,OCG5C0D,EAzDf,4MAEItM,MAAQ,CACJwF,KAAM,KACNxE,OAAQ,MAJhB,kEAOyB,IAAD,OAGhBvB,EAAK0I,oBAAmB,SAAA3C,GAChBA,EACA9F,EAAGW,WAAW,qBAAqBS,IAAI0E,EAAK2D,KAAK1E,MAAMb,MAAK,SAAArD,GACxD,EAAKc,SAAS,CACVL,OAAQwE,EAAK2D,IACb3D,KAAMjF,EAASU,OAAOoI,UAK9B,EAAKhI,SAAS,CACVmE,KAAM,YArB1B,+BA4Bc,IAAD,OACL,OACI,kBAAC,EAAD,KACI,kBAAC,EAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,KAEI,kBAAC,IAAD,CAAO+G,OAAK,EAACC,KAAK,IAAIC,UAAW,kBAAM,kBAAC,EAAD,CAAMjH,KAAM,EAAKxF,MAAMwF,KAAMxE,OAAS,EAAKhB,MAAMgB,YAExF,kBAAC,IAAD,CAAOwL,KAAK,UAAUC,UAAW,kBAAM,kBAAC,EAAD,CAAQhH,QAAW,EAAKzF,MAAOwF,KAAM,EAAKxF,MAAMwF,UAEvF,kBAAC,IAAD,CAAOgH,KAAK,SAASC,UAAW,kBAAM,kBAAC,EAAD,CAAOhH,QAAW,EAAKzF,MAAOwF,KAAM,EAAKxF,MAAMwF,UAErF,kBAAC,IAAD,CAAOgH,KAAK,gBAAgBC,UAAW,kBAAM,kBAAC,EAAD,CAAMjH,KAAM,EAAKxF,MAAMwF,KAAMxE,OAAU,EAAKhB,MAAMgB,YAE/F,kBAAC,IAAD,CAAOwL,KAAK,eAAeC,UAAW,kBAAM,kBAAC,EAAD,CAAajH,KAAM,EAAKxF,MAAMwF,KAAMxE,OAAS,EAAKhB,MAAMgB,YAEpG,kBAAC,IAAD,CAAOwL,KAAK,mBAAmBC,UAAW,kBAAM,kBAAC,EAAD,CAAgBjH,KAAM,EAAKxF,MAAMwF,UAEjF,kBAAC,IAAD,CAAOgH,KAAK,WAAWC,UAAW,kBAAM,kBAAC,EAAD,CAASjH,KAAM,EAAKxF,MAAMwF,UAClE,kBAAC,IAAD,CAAOiH,UAAW3C,YAhD9C,GAAyB5H,aCFLwK,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,MCXNC,IAASC,OACP,yBAAKvJ,UAAY,OACf,kBAAC,EAAD,OAGFqH,SAASC,eAAe,SDuHpB,kBAAmBkC,WACrBA,UAAUC,cAAcC,MACrBvJ,MAAK,SAAAwJ,GACJA,EAAaC,gBAEdxJ,OAAM,SAAA+E,GACL7E,QAAQ6E,MAAMA,EAAM3E,c","file":"static/js/main.9cd0eef3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/mobile.81f09f26.svg\";","import firebase from 'firebase'\r\nimport 'firebase/storage';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth'\r\n\r\n// const firebaseConfig = {\r\n//     apiKey: \"AIzaSyDGmVBx5LAYJuIq_Ni1nZBenfcVUFX-SyY\",\r\n//     authDomain: \"ecommerce-with-react-2ac06.firebaseapp.com\",\r\n//     databaseURL: \"https://ecommerce-with-react-2ac06.firebaseio.com\",\r\n//     projectId: \"ecommerce-with-react-2ac06\",\r\n//     storageBucket: \"ecommerce-with-react-2ac06.appspot.com\",\r\n//     messagingSenderId: \"690603499200\",\r\n//     appId: \"1:690603499200:web:09860bc318b5b7fd74d725\",\r\n//     measurementId: \"G-88N35MC51Q\"\r\n// };\r\n\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyDaGdQnXzQGb2zQzzbxMr6eRLSWi-EiWis\",\r\n    authDomain: \"tmdt-b4ab9.firebaseapp.com\",\r\n    projectId: \"tmdt-b4ab9\",\r\n    storageBucket: \"tmdt-b4ab9.appspot.com\",\r\n    messagingSenderId: \"141342052530\",\r\n    appId: \"1:141342052530:web:e076311fcdb0fb26dab9ab\",\r\n    measurementId: \"G-Z3TT27V3ZS\"\r\n  };\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst auth = firebase.auth();\r\nconst db = firebase.firestore();\r\nconst storage = firebase.storage();\r\n\r\nexport { auth, db, storage }","import React, { createContext } from 'react'\r\nimport { db } from '../Config/Config'\r\n\r\nexport const ProductsContext = createContext();\r\n\r\nexport class ProductsContextProvider extends React.Component {\r\n\r\n    state = {\r\n        products: [],\r\n        productTypes: [],\r\n        userProducts: [],\r\n    }\r\n\r\n    componentDidMount() {\r\n        const userProducts = this.state.userProducts;\r\n        db.collection('UserProduct').onSnapshot(snapshot => {\r\n            let changes = snapshot.docChanges();\r\n            changes.forEach(change => {\r\n                if (change.type === 'added') {\r\n                    userProducts.push({\r\n                        userProduct: change.doc.id,\r\n                        userId: change.doc.data().UserId,\r\n                        productId: change.doc.data().ProductId,\r\n                    })\r\n                }\r\n                this.setState({\r\n                    userProducts: userProducts\r\n                })\r\n            });\r\n        })\r\n        \r\n        const prevProducts = this.state.products;\r\n        db.collection('Products').onSnapshot(snapshot => {\r\n            let changes = snapshot.docChanges();\r\n            changes.forEach(change => {\r\n                if (change.type === 'added') {\r\n                    prevProducts.push({\r\n                        ProductID: change.doc.id,\r\n                        ProductName: change.doc.data().ProductName,\r\n                        ProductPrice: change.doc.data().ProductPrice,\r\n                        ProductImg: change.doc.data().ProductImg,\r\n                        ProductType: change.doc.data().ProductType\r\n                    })\r\n                }\r\n                this.setState({\r\n                    products: prevProducts\r\n                })\r\n            })\r\n        })\r\n\r\n        const productTypes = this.state.productTypes;\r\n        db.collection('ProductType').onSnapshot(snapshot => {\r\n            let changes = snapshot.docChanges();\r\n            changes.forEach(change => {\r\n                if (change.type === 'added') {\r\n                    productTypes.push({\r\n                        Type: change.doc.data().Type,\r\n                    })\r\n                }\r\n                this.setState({\r\n                    productTypes: productTypes\r\n                })\r\n            })\r\n        })\r\n\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <ProductsContext.Provider value={{ products: [...this.state.products], productTypes: [...this.state.productTypes], userProducts: [...this.state.userProducts] }}>\r\n                {this.props.children}\r\n            </ProductsContext.Provider>\r\n        )\r\n    }\r\n}\r\n\r\n","import { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { db } from '../Config/Config';\r\n\r\ntoast.configure();\r\n\r\nexport const CartReducer = (state, action) => {\r\n\r\n    const { shoppingCart, totalPrice, totalQty } = state;\r\n    let product;\r\n    let index;\r\n    let updatedPrice;\r\n    let updatedQty;\r\n    let updatedShoppingCart;\r\n\r\n    switch (action.type) {\r\n\r\n        case 'ADD_TO_CART':\r\n            const check = shoppingCart.find(product => product.ProductID === action.id);\r\n            if (check) {\r\n                toast.info('this product is already in your cart', {\r\n                    position: \"top-right\",\r\n                    autoClose: 2000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: false,\r\n                    draggable: false,\r\n                    progress: undefined,\r\n                    className :'toastInfo'\r\n                });\r\n                return state;\r\n            }\r\n            else {\r\n                product = action.product;\r\n                product['qty'] = 1;\r\n                product['TotalProductPrice'] = product.ProductPrice * product.qty;\r\n                updatedQty = totalQty + 1;\r\n                updatedPrice = totalPrice + product.ProductPrice;\r\n                db.collection('UserProduct').add({\r\n                    ProductId: action.id,\r\n                    UserId: action.userId,\r\n                }).then(() => {}).catch(err => console.log(err.message));\r\n                return {\r\n                    shoppingCart: [product, ...shoppingCart], totalPrice: updatedPrice, totalQty: updatedQty\r\n                }\r\n            }\r\n            // break;\r\n\r\n        case 'INC':\r\n            product = action.cart;\r\n            product.qty = ++product.qty;\r\n            product.TotalProductPrice = product.qty * product.ProductPrice;\r\n            updatedQty = totalQty + 1;\r\n            updatedPrice = totalPrice + product.ProductPrice;\r\n            index = shoppingCart.findIndex(cart => cart.ProductID === action.id);\r\n            shoppingCart[index] = product;\r\n            return {\r\n                shoppingCart: [...shoppingCart], totalPrice: updatedPrice, totalQty: updatedQty\r\n            }\r\n            // break;\r\n\r\n        case 'DEC':\r\n            product = action.cart;\r\n            if (product.qty > 1) {\r\n                product.qty = product.qty - 1;\r\n                product.TotalProductPrice = product.qty * product.ProductPrice;\r\n                updatedPrice = totalPrice - product.ProductPrice;\r\n                updatedQty = totalQty - 1;\r\n                index = shoppingCart.findIndex(cart => cart.ProductID === action.id);\r\n                shoppingCart[index] = product;\r\n                return {\r\n                    shoppingCart: [...shoppingCart], totalPrice: updatedPrice, totalQty: updatedQty\r\n                }\r\n            }\r\n            else {\r\n                return state;\r\n            }\r\n            // break;\r\n\r\n        case 'DELETE':\r\n            const filtered = shoppingCart.filter(product => product.ProductID !== action.id);\r\n            product = action.cart;\r\n            updatedQty = totalQty - product.qty;\r\n            updatedPrice = totalPrice - product.qty * product.ProductPrice;\r\n            let selectedDoc = db.collection('UserProduct')\r\n                            .where('ProductId', '==', action.id)\r\n                            .where('UserId' , '==', action.userId);\r\n            console.log(selectedDoc)\r\n            selectedDoc.get().then((querySnapshot) => {\r\n                querySnapshot.forEach(element => {\r\n                    element.ref.delete();\r\n                });\r\n            })\r\n            \r\n            // .({\r\n            //     ProductId: action.id,\r\n            //     UserId: action.userId,\r\n            // }).then(() => {}).catch(err => console.log(err.message));\r\n            return {\r\n                shoppingCart: [...filtered], totalPrice: updatedPrice, totalQty: updatedQty\r\n            }\r\n            // break;\r\n\r\n        case 'EMPTY':\r\n            return {\r\n                shoppingCart: [], totalPrice: 0, totalQty: 0\r\n            }\r\n        case 'SET_EXISTED_CART':\r\n            // let tp = 0, tq = 0, s = [];\r\n            updatedPrice = 0; updatedQty = 0;  updatedShoppingCart = [];\r\n            \r\n            action.products.forEach(p => {\r\n                const check = action.userProducts.find(up => (up.productId === p.ProductID) && (up.userId === action.userId))\r\n                \r\n                if(check) {\r\n                    const existed = updatedShoppingCart.find(sp => sp.ProductID === p.productID);\r\n                    if(!!!existed){\r\n                        p['qty'] = 1;\r\n                        p['TotalProductPrice'] = p.ProductPrice * p.qty;\r\n                        updatedShoppingCart.push(p);\r\n                        updatedPrice +=  Number(p.ProductPrice);\r\n                        updatedQty += 1;\r\n                    }\r\n                };\r\n            })\r\n            return  {\r\n                shoppingCart: [...updatedShoppingCart], totalPrice: updatedPrice, totalQty: updatedQty\r\n            };\r\n        \r\n\r\n        default:\r\n            return state;\r\n\r\n    }\r\n\r\n}\r\n","import React, { createContext, useReducer } from 'react'\r\nimport { CartReducer } from './CartReducer';\r\n\r\nexport const CartContext = createContext();\r\n\r\nexport const CartContextProvider = (props) => {\r\n    \r\n    const [cart, dispatch] = useReducer(CartReducer, { shoppingCart: [], totalPrice: 0, totalQty: 0 })\r\n\r\n\r\n    return (\r\n        <CartContext.Provider value={{ ...cart, dispatch }}>\r\n            {props.children}\r\n        </CartContext.Provider>\r\n    )\r\n}","import React, { useContext, useEffect } from 'react'\r\nimport logo from '../images/mobile.svg'\r\nimport { Link } from 'react-router-dom'\r\nimport { auth } from '../Config/Config'\r\nimport { Icon } from 'react-icons-kit'\r\nimport { cart } from 'react-icons-kit/entypo/cart'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { CartContext } from '../Global/CartContext'\r\nimport { ProductsContext } from '../Global/ProductsContext';\r\n\r\nexport const Navbar = ({ user, userId }) => {\r\n\r\n    const history = useHistory();\r\n    const { totalQty, dispatch} = useContext(CartContext);\r\n    const { products, userProducts } = useContext(ProductsContext);\r\n\r\n    useEffect(() => {\r\n        dispatch({type: 'SET_EXISTED_CART', products: products, userProducts: userProducts, userId : userId});\r\n        \r\n    }, [userId, products.length, userProducts.length])\r\n\r\n    // handle logout\r\n    const handleLogout = () => {\r\n        auth.signOut().then(() => {\r\n            history.push('/login');\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className='navbox'>\r\n            <div className='leftside'>\r\n                <Link to='/'>\r\n                    {/* <img src={logo} alt=\"\" /> */}\r\n                    <img src=\"https://img.icons8.com/color/48/000000/ios-photos.png\"/>\r\n                </Link>\r\n                <h1>Mobile Shopping Online</h1>\r\n            </div>\r\n            {!user && <div className='rightside'>\r\n                <span><Link to=\"signup\" className='navlink'>SIGN UP</Link></span>\r\n                <span><Link to=\"login\" className='navlink'>LOGIN</Link></span>\r\n            </div>}\r\n            {user && <div className='rightside'>\r\n                <span><Link to=\"/\" className='navlink'>{user}</Link></span>\r\n                <span style = {{position: 'relative'}}><Link to=\"cartproducts\" className='navlink'><Icon icon={cart} /></Link>\r\n                <span className='no-of-products'>{totalQty}</span>\r\n                </span>\r\n                <span><button type=\"button\" className=\"btn btn-outline-danger\" onClick={handleLogout}>Logout</button></span>\r\n            </div>}\r\n        </div>\r\n    )\r\n}\r\n","export const displayNumber = (number, replaceValue = '.') => number.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, replaceValue);\r\nexport const mobileTypeList = ['Iphone', 'Samsung'];\r\nexport const colorList  = ['#011f4b', '#fed766 ', '#fe4a49 ', '#2ab7ca', '#fe9c8f', '#009688', '#fdf498', '#7bc043', '#', '#', '#', '#', '#', '#']","import React, { useContext, useEffect, useState } from 'react'\r\nimport { ProductsContext } from '../Global/ProductsContext'\r\nimport { CartContext } from '../Global/CartContext'\r\nimport { displayNumber } from '../Common';\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nexport const Products = ({userId}) => {\r\n    \r\n    const [category, setCategory] = useState('All');\r\n\r\n    const [productCopy, setProductCopy] = useState([]);\r\n    \r\n    const { products, productTypes, userProducts } = useContext(ProductsContext);\r\n    \r\n    const { dispatch, shoppingCart } = useContext(CartContext);\r\n\r\n    const filterByType = (type) => {\r\n        setCategory(type);\r\n    }\r\n\r\n    useEffect(()=> {\r\n        products.map(p => {\r\n            \r\n            const checkAdd  = userProducts.find(up => (up.productId === p.ProductID && userId === up.userId))\r\n            if(checkAdd) p.isAdded = true;\r\n            else p.isAdded = false;\r\n            return p;\r\n        })\r\n        if(category === 'All'){\r\n            setProductCopy([...products]);\r\n        }\r\n        else{\r\n            \r\n            const clone = products.filter(p => p.ProductType === category);\r\n            setProductCopy([...clone]);\r\n        }\r\n    }, [category, userProducts.length, userId, shoppingCart.length])\r\n    \r\n    \r\n    \r\n    return (\r\n        <>\r\n            {/* {products.length !== 0 && <h1>Products</h1>} */}\r\n            <nav className=\"navbar navbar-expand-lg navbar-light\">\r\n                <a className=\"navbar-brand\" href=\"#\"><h1>Products</h1></a>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavDropdown\" aria-controls=\"navbarNavDropdown\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarNavDropdown\">\r\n                    <ul className=\"navbar-nav\">\r\n                        {\r\n                            category !== 'All' ? \r\n                            <li className=\"nav-item active\">\r\n                                <a className=\"nav-link btn btn-circle btn-secondary\" type = \"button\" onClick = {(e) => filterByType('All')} style = {{color: 'white', marginRight: '15px'}}>All</a>\r\n                            </li>\r\n                            :\r\n                            <li className=\"nav-item active\">\r\n                                <a className=\"nav-link btn btn-circle btn-success\" type = \"button\" onClick = {(e) => filterByType('All')} style = {{color: 'white', marginRight: '15px'}}>All</a>\r\n                            </li>\r\n                        }\r\n\r\n\r\n                        {productTypes && productTypes.length ? productTypes.map((type, i) => \r\n                            category !== type.Type ? \r\n                            <li className=\"nav-item active\" key = {i}>\r\n                                <a className=\"nav-link btn btn-circle btn-secondary\" type = \"button\" onClick = {(e) => filterByType(type.Type)} style = {{color: 'white', marginRight: '15px'}}>{type.Type}</a>\r\n                            </li>\r\n                            :\r\n                            <li className=\"nav-item active\" key = {i}>\r\n                                <a className=\"nav-link btn btn-circle btn-success\" type = \"button\" onClick = {(e) => filterByType(type.Type)} style = {{color: 'white', marginRight: '15px'}}>{type.Type}</a>\r\n                            </li>\r\n                        )\r\n                        : null}\r\n                         \r\n                        <li className=\"nav-item active\">\r\n                            <Link className=\"nav-link btn btn-success add-type-product\"  to = '/addproduct-type' style = {{color: 'white', marginRight: '15px'}}><i className=\"fa fa-plus-square\" aria-hidden=\"true\"></i></Link>\r\n                        </li>\r\n\r\n                    </ul>\r\n                </div>\r\n                </nav>\r\n            <div className='products-container'>\r\n                {products.length === 0 && <div>slow internet...no products to display</div>}\r\n                {productCopy && productCopy.length ? productCopy.map(product => (\r\n                    <div className='product-card' key={product.ProductID}>\r\n                        <div className='product-img'>\r\n                            <img src={product.ProductImg} alt=\"not found\" />\r\n                        </div>\r\n                        <div className='product-name'>\r\n                            {product.ProductName}\r\n                        </div>\r\n                        <div className='product-price'>\r\n                            {displayNumber(product.ProductPrice)} VNĐ\r\n                    </div>\r\n                        {shoppingCart.find(c => c.ProductID === product.ProductID) || product.isAdded ? \r\n                            <button  type = \"button\" className=' addcart-btn btn btn-secondary' onClick={() => dispatch({ type: 'ADD_TO_CART', id: product.ProductID, product, userId: userId })}>ADD TO CART</button>\r\n                            :\r\n                            <button  type = \"button\" className=' addcart-btn btn btn-outline-primary' onClick={() => dispatch({ type: 'ADD_TO_CART', id: product.ProductID, product, userId: userId })}>ADD TO CART</button>\r\n                        }\r\n                    </div>\r\n                    \r\n                ))\r\n                : \r\n                <div className = \"product-items\">\r\n                    No products of {category}\r\n                </div>}\r\n            </div>\r\n            <div className=\"nav-item active\">\r\n                <Link className=\"nav-link btn btn-info add-product\"  to = '/addproducts' style = {{color: 'white', marginRight: '15px'}}><i className=\"fa fa-plus\" aria-hidden=\"true\"></i></Link>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { Navbar } from './Navbar';\r\nimport { Products } from './Products'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { auth } from '../Config/Config'\r\n\r\nexport const Home = ({ user, userId }) => {\r\n\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        // forcing user to signup\r\n        auth.onAuthStateChanged(user => {\r\n            if (!user) {\r\n                history.push('/login');\r\n            }\r\n        })\r\n    })\r\n\r\n    return (\r\n        <div className=' wrapper home-wrapper'>\r\n            <div className=\"home-item\" style = {{flex : 2}}>\r\n                <Navbar user={user} userId = {userId} />\r\n            </div>\r\n            <div className=\"home-item\" style = {{flex : 8}}>\r\n                <Products userId = {userId} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { auth, db } from '../Config/Config'\r\nimport { Link } from 'react-router-dom'\r\nimport { Navbar } from './Navbar';\r\nimport { useHistory } from 'react-router-dom'\r\n\r\n\r\nexport const Signup = (props) => {\r\n\r\n    // defining state\r\n    const history = useHistory();\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [error, setError] = useState('');\r\n\r\n    // signup\r\n    const signup = (e) => {\r\n        e.preventDefault();\r\n        auth.createUserWithEmailAndPassword(email, password).then((cred) => {\r\n            db.collection('SignedUpUsersData').doc(cred.user.uid).set({\r\n                Name: name,\r\n                Email: email,\r\n                Password: password\r\n            }).then(() => {\r\n                setName('');\r\n                setEmail('');\r\n                setPassword('');\r\n                setError('');\r\n                history.push('/login');\r\n            }).catch(err => setError(err.message));\r\n        }).catch(err => setError(err.message));\r\n    }\r\n\r\n    return (\r\n        <div className = 'signup-wrraper'>\r\n            <div className=\"signup\" style = {{flex: 2}}>\r\n                <Navbar user = {props.user} />\r\n            </div>\r\n            <div className='container'  style = {{flex: 8}}>\r\n                <br />\r\n                <h2>Sign up</h2>\r\n                <br />\r\n                <form autoComplete=\"off\" className='form-group' onSubmit={signup}>\r\n                    <label htmlFor=\"name\">Name</label>\r\n                    <input type=\"text\" className='form-control' required\r\n                        onChange={(e) => setName(e.target.value)} value={name} />\r\n                    <br />\r\n                    <label htmlFor=\"email\">Email</label>\r\n                    <input type=\"email\" className='form-control' required\r\n                        onChange={(e) => setEmail(e.target.value)} value={email} />\r\n                    <br />\r\n                    <label htmlFor=\"passowrd\">Password</label>\r\n                    <input type=\"password\" className='form-control' required\r\n                        onChange={(e) => setPassword(e.target.value)} value={password} />\r\n                    <br />\r\n                    <button type=\"submit\" className='btn btn-success btn-md mybtn'>SUBMIT</button>\r\n                </form>\r\n                {error && <span className='error-msg'>{error}</span>}\r\n                <br />\r\n                <span>Already have an account? Login\r\n                    <Link to=\"login\"> Here</Link>\r\n                </span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { auth } from '../Config/Config'\r\nimport { Link } from 'react-router-dom';\r\nimport { Navbar } from './Navbar';\r\nimport { useHistory } from 'react-router-dom'\r\n\r\n\r\nexport const Login = (props) => {\r\n    const history = useHistory();\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [error, setError] = useState('');\r\n    const login = (e) => {\r\n        e.preventDefault();\r\n        auth.signInWithEmailAndPassword(email, password).then(() => {\r\n            setEmail('');\r\n            setPassword('');\r\n            setError('');\r\n            history.push('/');\r\n        }).catch(err => setError(err.message));\r\n    }\r\n\r\n    return (\r\n        <div className = \"login-wrapper\">\r\n            <div className=\"login\" style = {{flex : 2}}>\r\n                <Navbar user = {props.user} />\r\n            </div>\r\n            <div className='container' style ={{flex : 8}}>\r\n                <br />\r\n                <h2>Login</h2>\r\n                <br />\r\n                <form autoComplete=\"off\" className='form-group' onSubmit={login}>\r\n                    <label htmlFor=\"email\">Email</label>\r\n                    <input type=\"email\" className='form-control' required\r\n                        onChange={(e) => setEmail(e.target.value)} value={email} />\r\n                    <br />\r\n                    <label htmlFor=\"password\">Password</label>\r\n                    <input type=\"password\" className='form-control' required\r\n                        onChange={(e) => setPassword(e.target.value)} value={password} />\r\n                    <br />\r\n                    <button type=\"submit\" className='btn btn-success btn-md mybtn'>LOGIN</button>\r\n                </form>\r\n                {error && <span className='error-msg'>{error}</span>}\r\n                <br/>\r\n                <span>Don't have an account? Register\r\n                    <Link to=\"signup\"> Here</Link>\r\n                </span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const NotFound = () => {\r\n    return (\r\n        <div>\r\n            notfound\r\n        </div>\r\n    )\r\n}\r\n","import React, { useContext, useEffect } from 'react'\r\nimport { CartContext } from '../Global/CartContext'\r\nimport { Navbar } from './Navbar';\r\nimport { Icon } from 'react-icons-kit'\r\nimport { ic_add } from 'react-icons-kit/md/ic_add'\r\nimport { ic_remove } from 'react-icons-kit/md/ic_remove'\r\nimport { iosTrashOutline } from 'react-icons-kit/ionicons/iosTrashOutline'\r\nimport { Link } from 'react-router-dom'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { auth } from '../Config/Config'\r\nimport { displayNumber } from '../Common';\r\nimport { ProductsContext } from '../Global/ProductsContext';\r\n\r\nexport const Cart = ({ user, userId }) => {\r\n\r\n    const { shoppingCart, dispatch, totalPrice, totalQty } = useContext(CartContext);\r\n    const { products, userProducts } = useContext(ProductsContext);\r\n\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        auth.onAuthStateChanged(user => {\r\n            if (!user) {\r\n                history.push('/login');\r\n            }\r\n        });\r\n        dispatch({type: 'SET_EXISTED_CART', products: products, userProducts: userProducts, userId : userId});\r\n    }, [products.length, userProducts.length, userId]);\r\n\r\n    return (\r\n        <>\r\n            <Navbar user={user} />\r\n            <>\r\n                {shoppingCart.length !== 0 && <h1>Cart</h1>}\r\n                <div className='cart-container'>\r\n                    {\r\n                        shoppingCart.length === 0 && <>\r\n                            <div>no items in your cart or slow internet causing trouble (Refresh the page) or you are not logged in</div>\r\n                            <div><Link to=\"/\">Return to Home page</Link></div>\r\n                        </>\r\n                    }\r\n                    {shoppingCart && shoppingCart.length > 0 ?  shoppingCart.map(cart => (\r\n                        <div className='cart-card' key={cart.ProductID}>\r\n\r\n                            <div className='cart-img'>\r\n                                <img src={cart.ProductImg} alt=\"not found\" />\r\n                            </div>\r\n\r\n                            <div className='cart-name'>{cart.ProductName}</div>\r\n\r\n                            <div className='cart-price-orignal'>{displayNumber(cart.ProductPrice)} VNĐ</div>\r\n\r\n                            <div className='inc' onClick={() => dispatch({ type: 'INC', id: cart.ProductID, cart })}>\r\n                                <Icon icon={ic_add} size={24} />\r\n                            </div>\r\n\r\n                            <div className='quantity'>{cart.qty}</div>\r\n\r\n                            <div className='dec' onClick={() => dispatch({ type: 'DEC', id: cart.ProductID, cart })}>\r\n                                <Icon icon={ic_remove} size={24} />\r\n                            </div>\r\n\r\n                            <div className='cart-price'>\r\n                                {displayNumber(cart.TotalProductPrice)} VNĐ\r\n                            </div>\r\n\r\n                            <button className='delete-btn' onClick={() => dispatch({ type: 'DELETE', id: cart.ProductID, cart, userId: userId })}>\r\n                                <Icon icon={iosTrashOutline} size={24} />\r\n                            </button>\r\n                        </div>\r\n                    )) : null\r\n                    }\r\n                    {shoppingCart.length > 0 && <div className='cart-summary'>\r\n                        <div className='cart-summary-heading'>\r\n                            Cart-Summary\r\n                        </div>\r\n                        <div className='cart-summary-price'>\r\n                            <span>Total Price</span>\r\n                            <span>{totalPrice}</span>\r\n                        </div>\r\n                        <div className='cart-summary-price'>\r\n                            <span>Total Qty</span>\r\n                            <span>{totalQty}</span>\r\n                        </div>\r\n                        <Link to='cashout' className='cashout-link'>\r\n                            <button className='btn btn-outline-success btn-md' style={{ marginTop: 5 + 'px' }}>\r\n                                Cash on delivery\r\n                        </button>\r\n                        </Link>\r\n                    </div>}\r\n\r\n                </div>\r\n            </>\r\n        </>\r\n    )\r\n}","import React, { useState, useEffect , useContext} from 'react'\r\nimport { db, auth } from '../Config/Config';\r\nimport { Navbar } from '../Components/Navbar';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { ProductsContext } from '../Global/ProductsContext';\r\n\r\n\r\n\r\nexport const AddProducts = ({user, userId}) => {\r\n    const [productName, setProductName] = useState('');\r\n    const [productPrice, setProductPrice] = useState(0);\r\n    const [productImg, setProductImg] = useState('');\r\n    const [productType, setProductType] = useState('Iphone');\r\n    const [error, setError] = useState('');\r\n    const history = useHistory();\r\n    const { productTypes } = useContext(ProductsContext);\r\n    useEffect(() => {\r\n        // forcing user to signup\r\n        auth.onAuthStateChanged(user => {\r\n            if (!user) {\r\n                history.push('/login');\r\n            }\r\n        })\r\n    })\r\n\r\n\r\n    // const productImgHandler = (e) => {\r\n    //     let selectedFile = e.target.files[0];\r\n    //     if (selectedFile && types.includes(selectedFile.type)) {\r\n    //         setProductImg(selectedFile);\r\n    //         setError('')\r\n    //     }\r\n    //     else {\r\n    //         setProductImg(null);\r\n    //         setError('Please select a valid image type (jpg or png)');\r\n    //     }\r\n    // }\r\n\r\n    // add product\r\n    const addProduct = (e) => {\r\n        e.preventDefault();\r\n        // const uploadTask = storage.ref(`product-images/${productImg.name}`).put(productImg);\r\n        // uploadTask.on('state_changed', snapshot => {\r\n        //     const progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\r\n        //     console.log(progress);\r\n        // }, err => setError(err.message)\r\n        //     , () => {\r\n        //         storage.ref('product-images').child(productImg.name).getDownloadURL().then(url => {\r\n        //             db.collection('Products').add({\r\n        //                 ProductName: productName,\r\n        //                 ProductPrice: Number(productPrice),\r\n        //                 ProductImg: url\r\n        //             }).then(() => {\r\n        //                 setProductName('');\r\n        //                 setProductPrice(0)\r\n        //                 setProductImg('');\r\n        //                 setError('');\r\n        //                 document.getElementById('file').value = '';\r\n        //             }).catch(err => setError(err.message))\r\n        //         })\r\n        //     })\r\n\r\n        db.collection('Products').add({\r\n            ProductName: productName,\r\n            ProductPrice: Number(productPrice),\r\n            ProductImg: productImg,\r\n            ProductType: productType\r\n        }).then(() => {\r\n            setProductName('');\r\n            setProductPrice(0)\r\n            setProductImg('');\r\n            setError('');\r\n            document.getElementById('file').value = '';\r\n        }).catch(err => setError(err.message));\r\n        history.push('/');\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n            <div className='wrapper'>\r\n                <Navbar user={user} />\r\n                <div className='container add-product-container'>\r\n                    <br />\r\n                    <h2>ADD PRODUCTS</h2>\r\n                    <hr />\r\n                    <form autoComplete=\"off\" className='form-group' onSubmit={addProduct}>\r\n                        <label htmlFor=\"product-name\">Product Name</label>\r\n                        <input type=\"text\" className='form-control' required\r\n                            onChange={(e) => setProductName(e.target.value)} value={productName} />\r\n                        <br />\r\n                        <label htmlFor=\"product-price\">Product Price</label>\r\n                        <input type=\"number\" className='form-control' required\r\n                            onChange={(e) => setProductPrice(e.target.value)} value={productPrice} />\r\n                        <br />\r\n                        <label htmlFor=\"product-img\">Product Image</label>\r\n                        <input type=\"text\" className='form-control' id=\"file\" required\r\n                            onChange={(e) => setProductImg(e.target.value)} value = {productImg} />\r\n                        <br />\r\n                        <label htmlFor=\"product-type\">Product Type</label>\r\n                        <select onChange = {(e) => {setProductType(e.target.value)}} defaultValue = 'Iphone' className=\"form-select form-control\" aria-label=\"Product Type\" required>\r\n                            {productTypes && productTypes.length ? productTypes.map((t,i) => {\r\n                                return <option key = {i} value={t.Type}>{t.Type}</option>\r\n                            }) : null}\r\n                        </select>\r\n                        <br />\r\n                        <button type=\"submit\" className='btn btn-success btn-md mybtn'>Save</button>\r\n                    </form>\r\n                    {error && <span className='error-msg'>{error}</span>}\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React, { useState, useEffect, useContext } from 'react'\r\nimport { auth, db } from '../Config/Config'\r\nimport { CartContext } from '../Global/CartContext'\r\nimport { Navbar } from './Navbar';\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nexport const Cashout = (props) => {\r\n\r\n    const history = useHistory();\r\n\r\n    const { totalPrice, totalQty, dispatch } = useContext(CartContext);\r\n\r\n    // defining state\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [cell, setCell] = useState('');\r\n    const [address, setAddress] = useState('');\r\n    const [error, setError] = useState('');\r\n    const [successMsg, setSuccessMsg] = useState('');\r\n\r\n    useEffect(() => {\r\n        auth.onAuthStateChanged(user => {\r\n            if (user) {\r\n                db.collection('SignedUpUsersData').doc(user.uid).onSnapshot(snapshot => {\r\n                    setName(snapshot.data().Name);\r\n                    setEmail(snapshot.data().Email);\r\n                })\r\n            }\r\n            else {\r\n                history.push('/login')\r\n            }\r\n        })\r\n    })\r\n\r\n    const cashoutSubmit = (e) => {\r\n        e.preventDefault();\r\n        auth.onAuthStateChanged(user => {\r\n            if (user) {\r\n                const date = new Date();\r\n                const time = date.getTime();\r\n                db.collection('Buyer-info ' + user.uid).doc('_' + time).set({\r\n                    BuyerName: name,\r\n                    BuyerEmail: email,\r\n                    BuyerCell: cell,\r\n                    BuyerAddress: address,\r\n                    BuyerPayment: totalPrice,\r\n                    BuyerQuantity: totalQty\r\n                }).then(() => {\r\n                    setCell('');\r\n                    setAddress('');\r\n                    dispatch({ type: 'EMPTY' })\r\n                    setSuccessMsg('Your order has been placed successfully. Thanks for visiting us. You will be redirected to home page after 5 seconds');\r\n                    setTimeout(() => {\r\n                        history.push('/')\r\n                    }, 5000)\r\n                }).catch(err => setError(err.message))\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Navbar user={props.user} />\r\n            <div className='container'>\r\n                <br />\r\n                <h2>Cashout Details</h2>\r\n                <br />\r\n                {successMsg && <div className='success-msg'>{successMsg}</div>}\r\n                <form autoComplete=\"off\" className='form-group' onSubmit={cashoutSubmit}>\r\n                    <label htmlFor=\"name\">Name</label>\r\n                    <input type=\"text\" className='form-control' required\r\n                        value={name} disabled />\r\n                    <br />\r\n                    <label htmlFor=\"email\">Email</label>\r\n                    <input type=\"email\" className='form-control' required\r\n                        value={email} disabled />\r\n                    <br />\r\n                    <label htmlFor=\"Cell No\">Cell No</label>\r\n                    <input type=\"number\" className='form-control' required\r\n                        onChange={(e) => setCell(e.target.value)} value={cell} placeholder='eg 03123456789' />\r\n                    <br />\r\n                    <label htmlFor=\"Delivery Address\">Delivery Address</label>\r\n                    <input type=\"text\" className='form-control' required\r\n                        onChange={(e) => setAddress(e.target.value)} value={address} />\r\n                    <br />\r\n                    <label htmlFor=\"Price To Pay\">Price To Pay</label>\r\n                    <input type=\"number\" className='form-control' required\r\n                        value={totalPrice} disabled />\r\n                    <br />\r\n                    <label htmlFor=\"Total No of Products\">Total No of Products</label>\r\n                    <input type=\"number\" className='form-control' required\r\n                        value={totalQty} disabled />\r\n                    <br />\r\n                    <button type=\"submit\" className='btn btn-success btn-md mybtn'>SUBMIT</button>\r\n                </form>\r\n                {error && <span className='error-msg'>{error}</span>}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React, { useState, useEffect , useContext} from 'react'\r\nimport { db, auth } from '../Config/Config';\r\nimport { Navbar } from '../Components/Navbar';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { ProductsContext } from '../Global/ProductsContext';\r\nimport { toast } from 'react-toastify';\r\ntoast.configure();\r\n\r\n\r\n\r\nexport const AddProductType = ({user}) => {\r\n\r\n    const [productType, setProductType] = useState('');\r\n    const [error, setError] = useState('');\r\n    const history = useHistory();\r\n    const { productTypes } = useContext(ProductsContext);\r\n    useEffect(() => {\r\n        // forcing user to signup\r\n        auth.onAuthStateChanged(user => {\r\n            if (!user) {\r\n                history.push('/login');\r\n            }\r\n        })\r\n    })\r\n    // add product\r\n    const addProductType = (e) => {\r\n        e.preventDefault();\r\n        const check = productTypes.find(t => t.Type === productType); \r\n        if(check){\r\n            toast.error('This product type is already existed', {\r\n                position: \"top-right\",\r\n                autoClose: 2000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: false,\r\n                draggable: false,\r\n                progress: undefined,\r\n            });\r\n            return;\r\n        }\r\n        else{\r\n            db.collection('ProductType').add({\r\n                Type: productType\r\n            }).then(() => {\r\n                setProductType('');\r\n                setError('');\r\n            }).catch(err => setError(err.message));\r\n            history.push('/')\r\n            return;\r\n        }\r\n        \r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className='wrapper'>\r\n                <Navbar user={user} />\r\n                <div className='container add-product-container'>\r\n                    <br />\r\n                    <h2>ADD PRODUCT TYPE</h2>\r\n                    <hr />\r\n                    <form autoComplete=\"off\" className='form-group' onSubmit={addProductType}>\r\n                        <label htmlFor=\"product-type\">Product Type</label>\r\n                        <input type=\"text\" className='form-control' required\r\n                            onChange={(e) => setProductType(e.target.value)} value={productType} />\r\n                        <br />\r\n                        <button type=\"submit\" className='btn btn-success btn-md mybtn'>Save</button>\r\n                    </form>\r\n                    {error && <span className='error-msg'>{error}</span>}\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React, { Component } from 'react'\r\nimport { ProductsContextProvider } from './Global/ProductsContext'\r\nimport { Home } from './Components/Home'\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\r\nimport { Signup } from './Components/Signup'\r\nimport { Login } from './Components/Login'\r\nimport { NotFound } from './Components/NotFound'\r\nimport { auth, db } from './Config/Config'\r\nimport { CartContextProvider } from './Global/CartContext'\r\nimport { Cart } from './Components/Cart'\r\nimport { AddProducts } from './Components/AddProducts'\r\nimport { Cashout } from './Components/Cashout'\r\nimport { AddProductType } from './Components/AddProductType';\r\n\r\nexport class App extends Component {\r\n\r\n    state = {\r\n        user: null,\r\n        userId: null\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        // getting user info for navigation bar\r\n        auth.onAuthStateChanged(user => {\r\n            if (user) {\r\n                db.collection('SignedUpUsersData').doc(user.uid).get().then(snapshot => {\r\n                    this.setState({\r\n                        userId: user.uid,\r\n                        user: snapshot.data().Name\r\n                    })\r\n                })\r\n            }\r\n            else {\r\n                this.setState({\r\n                    user: null\r\n                })\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <ProductsContextProvider>\r\n                <CartContextProvider>\r\n                    <BrowserRouter>\r\n                        <Switch>\r\n                            {/* home */}\r\n                            <Route exact path='/' component={() => <Home user={this.state.user} userId ={this.state.userId}/>} />\r\n                            {/* signup */}\r\n                            <Route path=\"/signup\" component={() => <Signup history = {this.state} user={this.state.user} />} />\r\n                            {/* login */}\r\n                            <Route path=\"/login\" component={() => <Login history = {this.state} user={this.state.user}/>} />\r\n                            {/* cart products */}\r\n                            <Route path=\"/cartproducts\" component={() => <Cart user={this.state.user} userId = {this.state.userId} />} />\r\n                            {/* add products */}\r\n                            <Route path=\"/addproducts\" component={() => <AddProducts user={this.state.user} userId ={this.state.userId} />} />\r\n                            {/* add product type */}\r\n                            <Route path=\"/addproduct-type\" component={() => <AddProductType user={this.state.user} />} />\r\n                            {/* cashout */}\r\n                            <Route path='/cashout' component={() => <Cashout user={this.state.user} />} />\r\n                            <Route component={NotFound} />\r\n                        </Switch>\r\n                    </BrowserRouter>\r\n                </CartContextProvider>\r\n            </ProductsContextProvider>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\nReactDOM.render(\r\n  <div className = \"app\">\r\n    <App />\r\n  </div>,\r\n  \r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}